{"info":{"_postman_id":"3f1088ed-76d2-40e8-9dc0-1777209814a1","name":"Sisgrade","schema":"https://schema.getpostman.com/json/collection/v2.0.0/collection.json"},"item":[{"name":"Positive","item":[{"name":"Check Health:","event":[{"listen":"test","script":{"type":"text/javascript","exec":["let i=1;\r","pm.test(`${i++} Response status is: ${pm.response.status}`, () =>  pm.response.to.have.status(200));\r","pm.test(`${i++} Response text is: ${pm.response.text()}`, ()=> pm.expect(pm.response.text()).to.eql(`200`));\r","pm.test(`${i++} Response body is correct`, () => pm.response.to.have.body(`200`));\r",""]}}],"id":"60e91e84-72e6-48d2-8a0a-1577205bdcea","request":{"method":"GET","header":[],"url":"{{url}}/api/v1/Health"},"response":[]},{"name":"Check ApI:","event":[{"listen":"test","script":{"type":"text/javascript","exec":["let i=1;\r","pm.test(`${i++} Response status is: ${pm.response.status}`, () =>  pm.response.to.have.status(200));\r","pm.test(`${i++} Response text is: ${pm.response.text()}`, ()=> pm.expect(pm.response.text()).to.eql(`200`));\r","pm.test(`${i++} Response body is correct`, () => pm.response.to.have.body(`200`));\r","\r",""]}}],"id":"46dc0f95-2d9e-41b9-a7f3-d9329ab03093","request":{"method":"GET","header":[],"url":"{{url}}/ApI/v1/Health"},"response":[]},{"name":"health(lowercase):","event":[{"listen":"test","script":{"type":"text/javascript","exec":["let i=1;\r","pm.test(`${i++} Response status is: ${pm.response.status}`, () =>  pm.response.to.have.status(200));\r","pm.test(`${i++} Response text is: ${pm.response.text()}`, ()=> pm.expect(pm.response.text()).to.eql(`200`));\r","pm.test(`${i++} Response body is correct`, () => pm.response.to.have.body(`200`));\r",""]}}],"id":"bc1c1d25-2653-4997-84e4-4c201862e796","request":{"method":"GET","header":[],"url":"{{url}}/api/v1/health"},"response":[]}],"id":"710f9a35-afef-4808-a20f-ea5be093940c"},{"name":"Negative","item":[{"name":"Wrong methods","item":[{"name":"Put Health:","event":[{"listen":"test","script":{"type":"text/javascript","exec":["let i = 1; \r","pm.test(`${i++} Response status is: ${pm.response.status}`, ()=> pm.response.to.have.status(405));\r","\r","let responceText = ``;\r","pm.test(`${i++} Response Body is empty`, () => pm.response.to.have.body (responceText));"]}}],"id":"c06ea602-5570-4b06-a0e4-fcc0e02a1b31","request":{"method":"PUT","header":[],"url":"{{url}}/api/v1/Health"},"response":[]},{"name":"Post Health:","event":[{"listen":"test","script":{"type":"text/javascript","exec":["let i = 1; \r","pm.test(`${i++} Response status is: ${pm.response.status}`, ()=> pm.response.to.have.status(405));\r","\r","let responceText = \"\";\r","pm.test(`${i++} Response Body is empty`, ()=> pm.response.to.have.body (responceText));"]}}],"id":"b4b31ccf-9dec-4c17-9773-d9f5f6cb0eb4","request":{"method":"POST","header":[],"url":"{{url}}/api/v1/Health"},"response":[]},{"name":"Delete Health:","event":[{"listen":"test","script":{"type":"text/javascript","exec":["let i = 1; \r","pm.test(`${i++} Response status is: ${pm.response.status}`,  ()=> pm.response.to.have.status(405));\r","let responceText = \"\";\r","pm.test(`${i++} Response Body is empty`,()=> pm.response.to.have.body (responceText));"]}}],"id":"771f219e-97e1-4d85-ba6b-027c1d180f93","request":{"method":"DELETE","header":[],"url":"{{url}}/api/v1/Health"},"response":[]},{"name":"Patch Health:","event":[{"listen":"test","script":{"type":"text/javascript","exec":["let i = 1; \r","pm.test(`${i++} Response status is: ${pm.response.status}`, ()=> pm.response.to.have.status(405));\r","\r","let responceText = \"\";\r","pm.test(`${i++} Response Body is empty`, ()=> pm.response.to.have.body (responceText));"]}}],"id":"22c19eac-564f-4f59-9a6e-51aa80acdc3a","request":{"method":"PATCH","header":[],"url":"{{url}}/api/v1/Health"},"response":[]}],"id":"6c4fc3a0-d2c4-42f8-bd56-c0c09161fb2a"},{"name":"Wrong parameters","item":[{"name":"Check api/v2:","event":[{"listen":"test","script":{"type":"text/javascript","exec":["let reqUrl = `${pm.iterationData.get(\"url\")}/api/v2/Health`;\r","const hostStr = reqUrl.replace(`https://`,`http://`);\r","i=1;\r","pm.test(`${i++} Response status is: ${pm.response.status}`, ()=> pm.response.to.have.status(400));\r","\r","pm.test(`${i++} Response body contains an error`, () => pm.expect(pm.response.text()).to.include(`error`));\r","\r","const jsonData = pm.response.json();\r","pm.test(`${i++} Response message is appropriate`, ()=> { \r","    pm.expect(jsonData.error.code).to.eql(`UnsupportedApiVersion`);\r","    pm.expect(jsonData.error.message).to.eql(`The HTTP resource that matches the request URI '${hostStr}' does not support the API version '2'.`);\r","});\r","\r","\r","\r",""]}}],"id":"75e01e46-7dfd-4712-a184-7381b040005d","request":{"method":"GET","header":[],"url":"{{url}}/api/v2/Health"},"response":[]},{"name":"Check api/v:","event":[{"listen":"test","script":{"type":"text/javascript","exec":["let i = 1; \r","pm.test(`${i++} Response status is: ${pm.response.status}`, ()=> pm.response.to.have.status(400));\r","\r","pm.test(`${i++} Response body contains an error`, () => pm.expect(pm.response.text()).to.include(`error`));\r","\r","const jsonData = pm.response.json();\r","pm.test(`${i++} Response message is appropriate`, ()=> { \r","    pm.expect(jsonData.error.code).to.eql(`ApiVersionUnspecified`);\r","    pm.expect(jsonData.error.message).to.eql(`An API version is required, but was not specified.`);});\r",""]}}],"id":"121b3b55-0bf2-4691-a786-8cb59af457a8","request":{"method":"GET","header":[],"url":"{{url}}/api/v/Health"},"response":[]},{"name":"Without /api/:","event":[{"listen":"test","script":{"type":"text/javascript","exec":["let i=1;\r","pm.test(`${i++} Response status is: ${pm.response.status}`, ()=> pm.response.to.have.status(404));\r","let responceText = \"\";\r","pm.test(`${i++} Response Body is empty`, ()=>\r","    pm.response.to.have.body (responceText));\r",""]}}],"id":"adee9546-a06a-4f40-b933-3985f44c4334","request":{"method":"GET","header":[],"url":"{{url}}/v1/Health"},"response":[]}],"id":"dc72d64a-ad65-46ca-9a6e-aeeb870f85c6"}],"id":"5047f51d-5033-4b49-86b9-49d61d3cc7dc"}]}